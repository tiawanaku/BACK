'use strict';

const {
  setTimestampsSeeder
} = require('../../lib/util');

const { v4: uuidv4 } = require('uuid');

const { SOCIALS } = require('../jsonYANAPIRI/SOCIAL.js');

//items = setTimestampsSeeder(items);

module.exports = {
    async up (queryInterface, Sequelize) {
      let items = [];
      let victimas = [];
      let denunciantes = [];
      let insertRol = [];
      for (let z = 0; z < SOCIALS.length; z++) {
        const elm = SOCIALS[z];
        const sbtr = (elm.created_at + '').substring(0,10);
        if ( elm.Anio != '2023' && sbtr != '2023' ) {

          const dataVictima = await queryInterface.sequelize.query(
            `SELECT * FROM participante WHERE nombre_completo ilike '%${elm.nombreVictima}%';`
          );
          const VICTIMAPARTICIPANTE = dataVictima[0];

          if (VICTIMAPARTICIPANTE.length > 0) {

            insertRol.push({
              id: uuidv4(),
              id_rol: '82639031-3b1e-42eb-92ed-500a19ff3f8f',
              id_denuncia: VICTIMAPARTICIPANTE[0].id_denuncia,
              nombre_rol: 'SOCIAL',
              estado: 'ACTIVO'
            });

            await queryInterface.sequelize.query(
              `update denuncia set usuario_social_ynp = '${elm.name}' where id = '${VICTIMAPARTICIPANTE[0].id_denuncia}';`
            );
            
            await queryInterface.sequelize.query(
              `update denuncia set tipo_formulario_social_ynp = '${elm.TipoAsistenciaComplementaria}' where id = '${VICTIMAPARTICIPANTE[0].id_denuncia}';`
            );

          } else {

            const idDenuncia = uuidv4();

            const pramGrupoData = await queryInterface.sequelize.query(
                `SELECT * FROM sys_parametro WHERE grupo = 'CIUDAD_SEPDAVI';`
            );
            const DEPARTAMENTOS = pramGrupoData[0];

            const idDepartamento = sacarIdDepartamento(DEPARTAMENTOS, elm.departamentoRegion);

            const tipoParticipanteData = await queryInterface.sequelize.query(
                `SELECT * FROM sys_parametro WHERE grupo = 'TIPO_PARTICIPANTE';`
            );
            const TIPOPARTICIPANTE = tipoParticipanteData[0];

            const paramGeneroData = await queryInterface.sequelize.query(
                `SELECT * FROM sys_parametro WHERE nombre ilike '%${elm.generoVictima}%';`
            );
            const GENERODATA = paramGeneroData[0];
            const paramGenero = GENERODATA.pop();

            const paramVictima = TIPOPARTICIPANTE.find(dat=> { return dat.nombre == 'VICTIMA' });
            const paramDenunciante = TIPOPARTICIPANTE.find(dat=> { return dat.nombre == 'DENUNCIANTE' });
            // const paramDenunciado = TIPOPARTICIPANTE.find(dat=> { return dat.nombre == 'DENUNCIADO' });

            const denuncia = {
              id: idDenuncia,
              id_ciudad: idDepartamento,
              id_tipo_proceso: '0a190c5a-c5b7-47d1-9bad-faef5f8689d2',
              id_usuario_asignado: '7171272e-b31b-4c34-9220-9f535c950000',
              estado_actual: 'SEGUIMIENTO',
              etapa_actual: 'SEGUIMIENTO',
              id_entidad: 'bb01a8b1-dce1-43f2-8ae0-25526d9c52d5',
              estado: 'ACTIVO',
              id_ynp: elm.id,
              anio_ynp: elm.Anio,
              usuario_social_ynp: elm.name,
              tipo_formulario_social_ynp: elm.TipoAsistenciaComplementaria,
              tabla_ynp: 'socials',
              created_ynp: elm.created_at,
              updated_ynp: elm.updated_at,
              fecha_inicio_proceso_ynp: elm.fechaInicioProceso
            }

            const victima = {
              id: uuidv4(),
              id_denuncia: idDenuncia,
              id_tipo_participante: paramVictima?.id,
              id_genero: paramGenero?.id,
              edad_hecho: elm.edadVictima,
              nombre_completo: elm.nombreVictima,
              telefono: elm.numeroVictima
            }

            if ( elm.nombreDenunciante ) {
              denunciantes.push({
                id: uuidv4(),
                id_denuncia: idDenuncia,
                id_tipo_participante: paramDenunciante?.id,
                nombre_completo: elm.nombreDenunciante,
                telefono: elm.numeroContactoDenunciante
              });
            }

            //cambiar de acuerdo al entorno

            insertRol.push({
              id: uuidv4(),
              id_rol: 'c25d767c-748b-4aee-9d0f-60057e79dbbc',
              id_denuncia: idDenuncia,
              nombre_rol: 'VENTANILLA',
              estado: 'ACTIVO'
            });

            insertRol.push({
              id: uuidv4(),
              id_rol: '82639031-3b1e-42eb-92ed-500a19ff3f8f',
              id_denuncia: idDenuncia,
              nombre_rol: 'SOCIAL',
              estado: 'ACTIVO'
            });

            items.push(denuncia);
            victimas.push(victima);
          }
        }
      }

      if (items.length > 0) {
        items = setTimestampsSeeder(items);
        await queryInterface.bulkInsert('denuncia', items, {});
      }

      if (denunciantes.length > 0) {
        denunciantes =  setTimestampsSeeder(denunciantes);
        await queryInterface.bulkInsert('participante', denunciantes, {});
      }
      
      if (victimas.length > 0) {
        victimas = setTimestampsSeeder(victimas);
        await queryInterface.bulkInsert('participante', victimas, {});
      }
      
      if (insertRol.length > 0) {
        insertRol = setTimestampsSeeder(insertRol);
        await queryInterface.bulkInsert('denuncia_llenado_rol', insertRol, {});
      }
    },
    down (queryInterface, Sequelize) {}
};

function sacarIdDepartamento (DEPARTAMENTOS, data) {
    let nombre = '';
    switch (data) {
        case 'Potosí':nombre='POTOSÍ';break;
        case 'El Alto':nombre='EL ALTO';break;
        case 'Chuquisaca':nombre='SUCRE';break;
        case 'Santa Cruz':nombre='SANTA CRUZ';break;
        case 'Tarija':nombre='TARIJA';break;
        case 'Oruro':nombre='ORURO';break;
        case 'Cochabamba':nombre='COCHABAMBA';break;
        default: break;
    }
    const departamento = DEPARTAMENTOS.find(dat=>{ return dat.nombre == nombre });
    if(departamento) return departamento.id;
    return null
}
